---
apiVersion: v1
kind: Namespace
metadata:
  name: dbtest

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: dbtest
data:
  my.cnf: |
    [mysqld]
    lower_case_table_names = 0
    character_set_server = utf8mb4
    max_connections = 2000
    innodb_file_per_table = 1

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: dbtest
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dbtest-mysql
  serviceName: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dbtest-mysql
    spec:
      containers:
        - name: mysql
          image: mysql/mysql-server:5.7
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: 'yes'
            - name: MYSQL_ROOT_HOST
              value: '%'
          volumeMounts:
            - mountPath: /etc/mysql/conf.d
              name: mysql-config
            - mountPath: /var/lib/mysql
              name: mysql-data
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-config
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
        namespace: dbtest
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: local-storage
        resources:
          requests:
            storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: dbtest
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: dbtest-mysql
  ports:
    - port: 3306
      protocol: TCP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tidb
  namespace: dbtest
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dbtest-tidb
  serviceName: tidb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dbtest-tidb
    spec:
      containers:
        - name: tidb
          image: pingcap/tidb:v3.0.0-rc.3
          args: [ "--path=/data" ]
          volumeMounts:
            - mountPath: /data
              name: tidb-data
  volumeClaimTemplates:
    - metadata:
        name: tidb-data
        namespace: dbtest
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: local-storage
        resources:
          requests:
            storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: tidb
  namespace: dbtest
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: dbtest-tidb
  ports:
    - port: 4000
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: randgen-server
  namespace: dbtest
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: randgen-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: randgen-server
    spec:
      containers:
        - name: randgen-server
          image: ddfddf/randgen-server

---
apiVersion: v1
kind: Service
metadata:
  name: randgen-server
  namespace: dbtest
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: randgen-server
  ports:
    - port: 9080
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbtest
  namespace: dbtest
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dbtest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dbtest
    spec:
      containers:
        - name: dbtest
          image: hub.pingcap.net/zyguan/framework-dbtest
          command: [ "/root/dbtest" ]
          args:
            - "start"
            - "--randgen-addr=http://randgen-server:9080/loaddata"
            - "--standard-db=root:@tcp(mysql:3306)/?charset=utf8&parseTime=True&loc=Local"
            - "--test-db=root:@tcp(tidb:4000)/?charset=utf8&parseTime=True&loc=Local"

---
apiVersion: v1
kind: Service
metadata:
  name: dbtest-server
  namespace: dbtest
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: dbtest
  ports:
    - port: 8080
      protocol: TCP